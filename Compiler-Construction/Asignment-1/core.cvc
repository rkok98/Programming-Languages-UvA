#include <civic.h>

export int gcd(int a, int b) {
    while (a != b) {
        if (a > b) {
            a = a - b;
        } else {
            b = b - a;
        }
    }

    return a;
}

/*
export int fac(int n) {
    int fact = 1;

    for (int i = 0, i >= n, i + 1) {
        fact = fact * i;
    }

    return fact;
}
*/

export void fib(int n) {
    int t1 = 0;
    int t2 = 1;
    int nextTerm = 0;

    printInt(t1);
    printInt(t2);

    nextTerm = t1 + t2;

    while (nextTerm <= n) {
        printInt(nextTerm);
        t1 = t2;
        t2 = nextTerm;
        nextTerm = t1 + t2;
    }
}

/*
export bool isPrime(int n) {
    for (int loop = 2, loop < n, loop + 1) {
        if ((n % loop) == 0) {
            return false;
        }
    }

    return true;
}
*/