#ifndef TEST_ARRAY_CVC
#define TEST_ARRAY_CVC

#include <civic.h>
#include <array.cvc>

export int main() {
    testPrintIntVec();
    testPrintFloatVec();

    testPrintIntMat();
    testPrintFloatMat();

    testMatMul();

    testScanIntVec();
    testScanFloatVec();

    testScanIntMat();
    testScanFloatMat();
    return 0;
}

void testPrintIntVec() {
    int[10] array = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
    printIntVec(array);
}

void testPrintFloatVec() {
    float[10] array = [0.1, 1.2, 2.3, 3.4, 4.5, 5.6, 6.7, 7.8, 8.9, 9.0];
    printFloatVec(array);
}

void testPrintIntMat() {
    int[2, 10] array = [
            [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
            [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
        ];
    
    printIntMat(array);
}

void testPrintFloatMat() {
    float[2, 10] array = [
            [0.9, 1.8, 2.7, 3.6, 4.5, 5.4, 6.3, 7.2, 8.1, 9.0],
            [9.9, 8.8, 7.7, 6.6, 5.5, 4.4, 3.3, 2.2, 1.1, 0.0]
        ];
    
    printFloatMat(array);
}

void testScanIntVec() {
    int[5] array;

    scanIntVec(array);

    printIntVec(array);
}

void testScanFloatVec() {
    float[5] array;

    scanFloatVec(array);

    printFloatVec(array);
}

void testScanIntMat() {
    int[2, 5] array;

    scanIntMat(array);

    printIntMat(array);
}

void testScanFloatMat() {
    float[2, 5] array;

    scanFloatMat(array);

    printFloatMat(array);
}

void testMatMul() {
    float[2, 10] array_a = [
            [0.9, 1.8, 2.7, 3.6, 4.5, 5.4, 6.3, 7.2, 8.1, 9.0],
            [9.9, 8.8, 7.7, 6.6, 5.5, 4.4, 3.3, 2.2, 1.1, 0.0]
        ];

    float[2, 10] array_b = [
            [0.9, 1.8, 2.7, 3.6, 4.5, 5.4, 6.3, 7.2, 8.1, 9.0],
            [9.9, 8.8, 7.7, 6.6, 5.5, 4.4, 3.3, 2.2, 1.1, 0.0]
        ];

    float[2, 10] array_c;

    matMul(array_a, array_b, array_c);
    
    printFloatMat(array_c);
}

#endif